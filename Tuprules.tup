ROOT = $(TUP_CWD)
DEFINES_CONFIG_FILE = $(ROOT)/defines.cfg
SRC_PATH = $(ROOT)/src
THIRD_PARTY_PATH = $(ROOT)/third_party

BIN_TARGET = $(ROOT)/ts-viz

# VERSION = `cd .. && git add --all && git write-tree`
VERSION = 0.1

CFLAGS += -std=c++17
CFLAGS += -Wall -Werror -Wno-missing-braces -Wno-unused -Wno-expansion-to-defined
CFLAGS += -I$(SRC_PATH) -I$(THIRD_PARTY_PATH) -I$(THIRD_PARTY_PATH)/spdlog/include/ -I$(THIRD_PARTY_PATH)/rapidjson/include/
CFLAGS += -DIMGUI_IMPL_OPENGL_LOADER_GLEW

ifeq (@(BUILD_TYPE),debug)
    # CFLAGS += -fsanitize=undefined,address
    # LDFLAGS += -fsanitize=undefined,address

    CFLAGS += -O0 -g -fdebug-prefix-map=`pwd`=`pwd | sed 's/\/\.tup\/.*//'`
endif

ifeq (@(TUP_PLATFORM),macosx)
    CC = clang
    CXX = clang++

    CFLAGS += -stdlib=libc++ `pkg-config --cflags-only-I glfw3 glew fftw3 fftw3f fmt glm`
    LDFLAGS += -framework OpenGL `pkg-config --static --libs glfw3 glew fftw3 fftw3f fmt glm`

    ifeq (@(BUILD_TYPE),release)
        CFLAGS += -O3 -mcpu=apple-m1 -ffast-math -fno-finite-math-only -fvisibility=hidden -DNDEBUG
    endif
else
    CC = gcc
    CXX = g++

    CFLAGS += -Wno-psabi `pkg-config --cflags-only-I gl glfw3 glew fftw3 fftw3f fmt glm`
    LDFLAGS += `pkg-config --static --libs gl glfw3 glew fftw3 fftw3f fmt glm`
    LDFLAGS += -lpthread -latomic -lfftw3 -lfftw3f

    ifeq (@(BUILD_TYPE),release)
        CFLAGS += -O3 -march=native -ffast-math -fno-finite-math-only -fvisibility=hidden -DNDEBUG
    endif
endif

!cpp = |> $(CXX) $(CFLAGS) $(CFLAGS_%f) -c %f -o %o |> %f.o $(ROOT)/<src_objects>
# !archive = |> ar rs %o |>
!link = |> $(CXX) $(CFLAGS) $(LDFLAGS) -o %o %<src_objects> |> $(BIN_TARGET)
!write_linker_cmd = |> echo "$(CXX) $(CFLAGS) $(LDFLAGS) -o $(BIN_TARGET) %<src_objects>" > %o |> link.sh
